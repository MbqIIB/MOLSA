

CREATE COMPUTE MODULE EntryMsgFlow_InitiateSOAP
	DECLARE ServiceName 	EXTERNAL CHARACTER 'Service1';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET Environment.Variables.MsgID=InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
		SET Environment.Variables.ServiceName=ServiceName;
		SET Environment.Variables.Org.referenceNum 		  = InputRoot.XMLNSC.*[<1].*:eAI_HEADER.*:referenceNum;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE EntryMsgFlow_InitiateDB
	DECLARE ServiceName 	EXTERNAL CHARACTER 'Service1';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET Environment.Variables.MsgID=InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
		SET Environment.Variables.ServiceName=ServiceName;
		SET Environment.Variables.Org.referenceNum 		  = InputRoot.XMLNSC.*[<1].*:eAI_HEADER.*:referenceNum;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE ExitMsgFlow_restore
	DECLARE ServiceName 	EXTERNAL CHARACTER 'Service1';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier=Environment.Variables.MsgID;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
